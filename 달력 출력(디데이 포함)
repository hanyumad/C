#include <stdio.h>
#include <time.h>

enum month { Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec };
enum day { Sun, Mon, Tue, Wed, Thu, Fri, Sat };

const char *monthName[] = 
    {"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"};
// 각 월 이름 문자열 배열

const char *dayName[] = { "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" };
// 각 요일 이름 문자열 배열

int InputYear() {
    int year;
    printf("Input Year(Input 1900 ~ 2100)\n");
    printf("Year : ");
    scanf("%d", &year);
    
    if (year < 1900 || year > 2100) {
        printf("\nInvalid Year\n");
        return 1;
    }
    return year;    //  입력받은 year값 반환
}

int InputMonth() {
    int month;
    printf("\nInput Month(1 ~ 12)\n");
    printf("Month : ");
    scanf("%d", &month);
    
    if (month < 1 || month > 12) {
        printf("\nInvalid Month\n");
        return 1;
    }
    return month;   //  입력받은 month값 반환
}

// 달력 출력 함수
void PrintCalendar(int year, int month) {
    struct tm timeinfo = {0};
    timeinfo.tm_year = year - 1900;
    timeinfo.tm_mon = month - 1;
    timeinfo.tm_mday = 1;
    mktime(&timeinfo);

    int Week = timeinfo.tm_wday;
    int lastDay;

    // 각 달의 마지막 날짜 설정
    switch (month) {
        case Feb+1:
            if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
                lastDay = 29;
            } else {
                lastDay = 28;
            break;
            }
        case Apr+1: 
        case Jun+1: 
        case Sep+1: 
        case Nov+1:
            lastDay = 30;
            break;
        default:
            lastDay = 31;
    }

    // 헤더 출력
    printf("\n%d / %s\n", year, monthName[month-1]);
    printf("===========================\n");
    for (int i = Sun; i <= Sat; i++) {
        printf("%s ", dayName[i]);
    }
    printf("\n===========================\n");

    // 첫 날짜 앞에 공백 출력
    for (int i = 0; i < Week; i++) {
        printf("\t");
    }

    // 날짜 출력
    for (int date = 1; date <= lastDay; date++) {
        printf("%3d ", date);
        Week++;
        if (Week == 7) {
            printf("\n");
            Week = 0;
        }
    }
    printf("\n");
}

int DDay() {
    char answer;
    getchar();
    
    printf("\nCheck D-Day? (Y / N)\n");
    scanf("%c", &answer);
    
    if (answer == 'Y' || answer == 'y') {
        printf("D-Day");
    } else if (answer == 'N' || answer == 'n') {
        printf("\nProgram stop");
        return 0;
    } else {
        printf("\nInvalid answer");
        return 1;
    }
}

int main() {
    int year = InputYear();
    if (year == 1) {
        return 0;
    }
    int month = InputMonth();
    if (month == 1) {
        return 0;
    }
    PrintCalendar(year, month);
    DDay();
    
    return 0;
}
